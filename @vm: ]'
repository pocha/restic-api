[1mdiff --git a/basic-web-ui/script.js b/basic-web-ui/script.js[m
[1mindex 0bbfe28..6afc2f4 100644[m
[1m--- a/basic-web-ui/script.js[m
[1m+++ b/basic-web-ui/script.js[m
[36m@@ -259,7 +259,7 @@[m [mfunction displayScheduledBackups(schedules, locationId) {[m
           </div>[m
         </div>[m
         <div class="flex space-x-2 ml-4">[m
[31m-          <button onclick="(async function(btn) { const password = prompt('Enter backup location password'); if (!password) { alert('Please enter the password in the form first'); return; } showLoadingOnButton(btn); try { if ('${schedule.type}' === 'command') { await startBackup('${locationId}', { type: 'command', command: '${schedule.command}', filename: '${schedule.filename}' }, password); } else { await startBackup('${locationId}', { type: 'directory', path: '${schedule.path}' }, password); } } catch (error) { console.error('Backup failed:', error); showDataInModal('Backup Error', error.message, false); } hideLoadingOnButton(btn); })(this)" [m
[32m+[m[32m          <button onclick="executeScheduledBackup('${locationId}', '${schedule.schedule_id}', this)"[m[41m [m
                   class="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded text-sm transition-colors">[m
             Backup Now[m
           </button>[m
[36m@@ -329,6 +329,32 @@[m [masync function backupNowForSchedule(locationId, schedule, button) {[m
   hideLoadingOnButton(button);[m
 }[m
 [m
[32m+[m[32masync function executeScheduledBackup(locationId, scheduleId, button) {[m
[32m+[m[32m  showLoadingOnButton(button);[m
[32m+[m[32m  try {[m
[32m+[m[32m    const response = await fetch(`/locations/${locationId}/execute-cron/${scheduleId}`, {[m
[32m+[m[32m      method: 'POST',[m
[32m+[m[32m      headers: {[m
[32m+[m[32m        'Content-Type': 'application/json'[m
[32m+[m[32m      }[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m    if (!response.ok) {[m
[32m+[m[32m      const errorData = await response.json();[m
[32m+[m[32m      throw new Error(errorData.error || 'Failed to execute scheduled backup');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Handle the streaming response[m
[32m+[m[32m    showDataInModal('Backup Progress', response.body, true);[m
[32m+[m[41m    [m
[32m+[m[32m  } catch (error) {[m
[32m+[m[32m    console.error('Scheduled backup execution failed:', error);[m
[32m+[m[32m    showDataInModal('Backup Error', error.message, false);[m
[32m+[m[32m  }[m
[32m+[m[32m  hideLoadingOnButton(button);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
 // UI functions[m
 async function loadLocations() {[m
   showLoading("locationsList")[m
